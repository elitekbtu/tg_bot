services:
  # PostgreSQL база данных
  postgres:
    image: postgres:15-alpine
    container_name: tg_bot_postgres
    environment:
      POSTGRES_DB: ${DB_NAME:-tg_bot_db}
      POSTGRES_USER: ${DB_USER:-tg_bot_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-tg_bot_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/bot/database:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-tg_bot_user} -d ${DB_NAME:-tg_bot_db}"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - tg_bot_network
  bot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: tg_bot_app
    env_file:
      - .env
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - DB_HOST=postgres
      - DB_NAME=${DB_NAME:-tg_bot_db}
      - DB_USER=${DB_USER:-tg_bot_user}
      - DB_PASSWORD=${DB_PASSWORD:-tg_bot_password}
      - ADMIN_USER_ID=${ADMIN_USER_ID}
    volumes:
      - ./src:/app/src
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - tg_bot_network

volumes:
  postgres_data:
    driver: local

networks:
  tg_bot_network:
    driver: bridge 